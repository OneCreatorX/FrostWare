task.spawn(function()pcall(function()while not game:IsLoaded() do task.wait() end;local HS=game:GetService("HttpService") local cb=setclipboard or toclipboard or (syn and syn.write_clipboard) local DIR="scripts" if not isfolder(DIR) then makefolder(DIR) end;local CFGF=DIR.."/autorun.json" local function rd(p)local ok,s=pcall(function()return readfile(p)end)if ok then return s or "" end return nil end;local function wr(p,t)pcall(function()writefile(p,t or "")end)end;local function del(p)pcall(function()delfile(p)end)end;local function ld()local m={}if isfile and isfile(CFGF) then local s=rd(CFGF) if s and #s>0 then local ok,t=pcall(function()return HS:JSONDecode(s)end)if ok and type(t)=="table" then m=t end end end return m end;local function sv(m)wr(CFGF,HS:JSONEncode(m))end;local CFG=ld() addTab("Scripts",nil,function(pg)local sc=x("sf",pg,{bs=0,bc=C.w,bt=1,sz=u(1,0,1,0),ps=u(0,0,0,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,ScrollingDirection=Enum.ScrollingDirection.Y,ScrollBarImageTransparency=0.4})sc.Active=true sc.ScrollBarThickness=6 local pad=Instance.new("UIPadding")pad.PaddingLeft=D(0,16) pad.PaddingRight=D(0,16) pad.PaddingTop=D(0,16) pad.PaddingBottom=D(0,16) pad.Parent=sc local lay=Instance.new("UIListLayout")lay.Parent=sc lay.FillDirection=Enum.FillDirection.Vertical lay.HorizontalAlignment=Enum.HorizontalAlignment.Left lay.SortOrder=Enum.SortOrder.LayoutOrder lay.Padding=D(0,12) local ttl=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=28,ft=F(R..A.i,E.b,E.n),tc=C.w,bt=1,sz=u(1,0,0,36),ps=u(0,0,0,0),tx="Scripts"}) local sCap=x("fr",sc,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,44),ps=u(0,0,0,0)})x("uc",sCap,{cr=D(0.18,0)})x("ug",sCap,{rt=90,Color=s(r(166,190,255),r(93,117,160))})x("us",sCap,{ar=E.a,th=1,Color=C.st}) local sInp=Instance.new("TextBox") sInp.Parent=sCap sInp.Name="Search" sInp.BorderSizePixel=0 sInp.BackgroundTransparency=1 sInp.TextColor3=C.t1 sInp.PlaceholderText="Search scripts..." sInp.TextSize=18 sInp.FontFace=F(R..A.i,E.s,E.n) sInp.Size=u(1,-24,1,-16) sInp.Position=u(0,12,0,8) sInp.TextXAlignment=Enum.TextXAlignment.Left sInp.TextYAlignment=Enum.TextYAlignment.Center sInp.Text="" local lh=x("fr",sc,{bs=0,bc=C.w,bt=1,sz=u(1,0,0,0),ps=u(0,0,0,0),AutomaticSize=Enum.AutomaticSize.Y}) local ll=Instance.new("UIListLayout") ll.Parent=lh ll.FillDirection=Enum.FillDirection.Vertical ll.HorizontalAlignment=Enum.HorizontalAlignment.Left ll.SortOrder=Enum.SortOrder.LayoutOrder ll.Padding=D(0,10) local items={} local function scan()items={}local ok,fs=pcall(function()return listfiles(DIR)end)if ok and fs then for _,f in ipairs(fs) do local n=f:match("([^/\\]+)%.lua$") if n and #n>0 then table.insert(items,n) end end table.sort(items,function(a,b)return a:lower()<b:lower() end) end end;local function execName(n)local pth=DIR.."/"..n..".lua" local s=rd(pth) if not s then return false,"read failed" end local fn,er=loadstring(s) if not fn then warn(er) return false,er end local ok,er2=xpcall(fn,function(e)return debug.traceback(e,2) end) if not ok then warn(er2) return false,er2 end return true end;local function mkRow(name)local row=x("fr",lh,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,44),ps=u(0,0,0,0)})x("uc",row,{cr=D(0.18,0)})x("ug",row,{rt=90,Color=s(r(166,190,255),r(93,117,160))})x("us",row,{ar=E.a,th=1,Color=C.st}) local lb=x("tl",row,{txw=true,tfx=E.lx,tfy=E.ly,txs=18,ft=F(R..A.i,E.s,E.n),tc=C.t1,bt=1,sz=u(1,-324,1,-16),ps=u(0,12,0,8),tx=name}) local act=x("fr",row,{bs=0,bc=C.w,bt=1,sz=u(0,312,1,0),ps=u(1,-312,0,0)}) local al=Instance.new("UIListLayout") al.Parent=act al.FillDirection=Enum.FillDirection.Horizontal al.HorizontalAlignment=Enum.HorizontalAlignment.Right al.VerticalAlignment=Enum.VerticalAlignment.Center al.SortOrder=Enum.SortOrder.LayoutOrder al.Padding=D(0,8) local function btn(tw,wid)local b=x("tb",act,{txw=true,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(0,wid or 88,0,32),bt=1,bd=C.k,tx=tw})x("uc",b,{cr=D(0.18,0)})return b end; local bRun=btn("Run",72) local bRn=btn("Rename",88) local bDel=btn("Delete",80) local bAuto=btn((CFG[name] and "Auto: On" or "Auto: Off"),96) local rp=x("fr",row,{bs=0,bc=C.g2,bt=0,sz=u(0,260,0,92),ps=u(0.5,-130,0.5,-46),v=false,zi=50})x("uc",rp,{cr=D(0.12,0)})x("us",rp,{ar=E.a,th=1,Color=C.st}) local rlbl=x("tl",rp,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.s,E.n),tc=C.w,bt=1,sz=u(1,-20,0,24),ps=u(0,10,0,8),tx="New name"}) local rb=Instance.new("TextBox") rb.Parent=rp rb.Name="NameInput" rb.BorderSizePixel=0 rb.BackgroundColor3=C.t1 rb.BackgroundTransparency=0.1 rb.TextColor3=C.w rb.TextSize=16 rb.FontFace=F(R..A.i,E.r,E.n) rb.Size=u(1,-20,0,30) rb.Position=u(0,10,0,36) rb.Text=name rb.TextXAlignment=Enum.TextXAlignment.Left rb.TextYAlignment=Enum.TextYAlignment.Center x("uc",rb,{cr=D(0.12,0)}) local ra=x("fr",rp,{bs=0,bc=C.w,bt=1,sz=u(1,-20,0,30),ps=u(0,10,1,-40)}) local ral=Instance.new("UIListLayout") ral.Parent=ra ral.FillDirection=Enum.FillDirection.Horizontal ral.HorizontalAlignment=Enum.HorizontalAlignment.Right ral.VerticalAlignment=Enum.VerticalAlignment.Center ral.Padding=D(0,8) local rOk=btn("Save",72) rOk.Parent=ra local rCx=btn("Cancel",72) rCx.Parent=ra y(bRun,function()execName(name)end) y(bAuto,function()CFG[name]=not CFG[name] sv(CFG) bAuto[M.tx]=CFG[name] and "Auto: On" or "Auto: Off" if CFG[name] then execName(name) end end) y(bDel,function()del(DIR.."/"..name..".lua") CFG[name]=nil sv(CFG) row:Destroy() end) y(bRn,function()rp[M.v]=true rb.Text=name end) y(rCx,function()rp[M.v]=false end) y(rOk,function()local nn=(rb.Text or ""):gsub("[%c%p%s]","") if nn=="" then return end if nn==name then rp[M.v]=false return end local op=DIR.."/"..name..".lua" local np=DIR.."/"..nn..".lua" if isfile and isfile(np) then return end local s=rd(op) if s then wr(np,s) del(op) end if CFG[name]~=nil then CFG[nn]=CFG[name] CFG[name]=nil sv(CFG) end lb[M.tx]=nn name=nn rp[M.v]=false end) return row end;local function rebuild()for _,ch in ipairs(lh:GetChildren()) do if ch:IsA("Frame") then ch:Destroy() end end;scan() local q=(sInp.Text or ""):lower() for _,nm in ipairs(items) do if q=="" or nm:lower():find(q,1,true) then local r=mkRow(nm) end end;for _,nm in ipairs(items) do if CFG[nm] then execName(nm) end end end;sInp:GetPropertyChangedSignal("Text"):Connect(rebuild) rebuild() end)end)end)
