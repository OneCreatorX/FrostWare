addTab("Home","https://img.icons8.com/ios-filled/256/ffffff/home.png",function(page)
if not T.sf then T.sf="ScrollingFrame" end
local sc=x("sf",page,{bs=0,bc=C.w,bt=1,sz=u(1,0,1,0),ps=u(0,0,0,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,ScrollingDirection=Enum.ScrollingDirection.Y,ScrollBarImageTransparency=0.4})
sc.Active=true
local pad=Instance.new("UIPadding")
pad.PaddingLeft=D(0,16) pad.PaddingRight=D(0,16) pad.PaddingTop=D(0,16) pad.PaddingBottom=D(0,16)
pad.Parent=sc
local layout=Instance.new("UIListLayout")
layout.Parent=sc
layout.FillDirection=Enum.FillDirection.Vertical
layout.HorizontalAlignment=Enum.HorizontalAlignment.Left
layout.SortOrder=Enum.SortOrder.LayoutOrder
layout.Padding=D(0,12)
local title=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=28,ft=F(R..A.i,E.b,E.n),tc=C.w,bt=1,sz=u(1,0,0,36),ps=u(0,0,0,0),tx="Home"})
local info=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=18,ft=F(R..A.i,E.r,E.n),tc=C.t2,bt=1,sz=u(1,0,0,0),ps=u(0,0,0,0),tx="Loading...",AutomaticSize=Enum.AutomaticSize.Y})
local cards=x("fr",sc,{bs=0,bc=C.w,bt=1,sz=u(1,0,0,0),ps=u(0,0,0,0),AutomaticSize=Enum.AutomaticSize.Y})
local grid=Instance.new("UIGridLayout")
grid.Parent=cards
grid.FillDirection=Enum.FillDirection.Horizontal
grid.SortOrder=Enum.SortOrder.LayoutOrder
grid.HorizontalAlignment=Enum.HorizontalAlignment.Left
grid.CellPadding=U2 and U2.new or UDim2.new
grid.CellPadding=UDim2.new(0,10,0,10)
grid.CellSize=UDim2.new(0.32,0,0,90)
local function mkcard(p,lab,clr)
local c=x("fr",p,{bs=0,bc=C.g2,bt=0,sz=u(1,0,0,90)})
x("uc",c,{cr=D(0.16,0)})
x("us",c,{ar=E.a,th=1,Color=C.st})
x("tl",c,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.s,E.n),tc=C.t2,bt=1,sz=u(1,-20,0,22),ps=u(0,10,0,10),tx=lab})
local v=x("tl",c,{txw=true,tfx=E.lx,tfy=E.ly,txs=26,ft=F(R..A.i,E.b,E.n),tc=clr,bt=1,sz=u(1,-20,0,40),ps=u(0,10,0,40),tx="0"})
return v
end
local vFps=mkcard(cards,"FPS",C.a1)
local vPing=mkcard(cards,"Ping (ms)",C.t2)
local vMem=mkcard(cards,"Memory (MB)",r(255,180,120))
local graphs=x("fr",sc,{bs=0,bc=C.w,bt=1,sz=u(1,0,0,0),ps=u(0,0,0,0),AutomaticSize=Enum.AutomaticSize.Y})
local gl=Instance.new("UIListLayout")
gl.Parent=graphs
gl.FillDirection=Enum.FillDirection.Vertical
gl.HorizontalAlignment=Enum.HorizontalAlignment.Left
gl.SortOrder=Enum.SortOrder.LayoutOrder
gl.Padding=D(0,10)
local function mkspark(p,lab,clr)
local box=x("fr",p,{bs=0,bc=C.g2,bt=0,sz=u(1,0,0,90)})
x("uc",box,{cr=D(0.12,0)})
x("us",box,{ar=E.a,th=1,Color=C.st})
x("tl",box,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.s,E.n),tc=C.t2,bt=1,sz=u(1,-20,0,20),ps=u(0,10,0,8),tx=lab})
local area=x("fr",box,{bs=0,bc=C.w,bt=1,sz=u(1,-20,0,40),ps=u(0,10,0,38),ci=true})
local n=60
local fills={}
local vals={}
for i=0,n-1 do
local sl=x("fr",area,{bs=0,bc=C.w,bt=1,sz=u(1/n,0,1,0),ps=u(i/n,0,0,0)})
local fi=x("fr",sl,{bs=0,bc=clr,bt=0,sz=u(1,0,0.1,0),ps=u(0,0,0.9,0)})
fills[#fills+1]=fi
end
local function push(v)
vals[#vals+1]=v
if #vals>n then table.remove(vals,1) end
for i=1,n do
local h=vals[i] or 0
if h<0 then h=0 end
if h>1 then h=1 end
local fi=fills[i]
fi.Size=u(1,0,h,0)
fi.Position=u(0,0,1-h,0)
end
end
return push
end
local pushFps=mkspark(graphs,"FPS",C.a1)
local pushPing=mkspark(graphs,"Ping",C.t2)
local RS=G.RunService
local PS=G.Players
local ST=G.Stats
local fps=60
RS.RenderStepped:Connect(function(dt)
local inst=1/math.max(dt,1/1000)
fps=fps*0.9+inst*0.1
end)
task.spawn(function()
while page and page.Parent do
local now=os.date("%X")
local place=game.PlaceId
local job=game.JobId
local ver=game.PlaceVersion
local cnt=#PS:GetPlayers()
local maxp=PS.MaxPlayers
local ping=0
pcall(function()
local s=ST.Network.ServerStatsItem["Data Ping"]:GetValueString()
if s then local n=tonumber((s:match("%d+%.?%d*"))) if n then ping=n end end
end)
local mem=0
pcall(function()
mem=math.floor(ST:GetTotalMemoryUsageMb())
end)
vFps.Text=tostring(math.floor(fps+0.5))
vPing.Text=tostring(math.floor(ping+0.5))
vMem.Text=tostring(mem)
info.Text="Welcome\n\nGame status:\nPlayers: "..cnt.."/"..maxp.."\nPlaceId: "..place.."\nJobId: "..job.."\nVersion: "..ver.."\nTime: "..now
pushFps(fps/120)
pushPing(ping/300)
task.wait(0.25)
end
end)
end)
