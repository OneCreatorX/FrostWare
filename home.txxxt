task.spawn(function() pcall(function() while not game:IsLoaded() do task.wait() end; local HttpService=game:GetService("HttpService") local TS=game:GetService("TeleportService") local Players=game:GetService("Players") local LP=Players.LocalPlayer local maxShown=15 local sortDesc=true local filterMode="notfull" local function fetchServers() local servers={} local cursor=nil repeat local url="https://games.roblox.com/v1/games/"..tostring(game.PlaceId).."/servers/Public?limit=100" if cursor then url=url.."&cursor="..cursor end local res=request({Url=url,Method="GET"}) if not res or not res.Body then break end local ok,data=pcall(function() return HttpService:JSONDecode(res.Body) end) if not ok or not data then break end for _,s in ipairs(data.data or {}) do table.insert(servers,s) if #servers>=maxShown then break end end cursor=data.nextPageCursor until #servers>=maxShown or not cursor return servers end local function isNotFull(s) return (s.playing or 0) < (s.maxPlayers or s.playing or 1) end local function isIntermediate(s) local p=(s.playing or 0) local m=(s.maxPlayers or p) return p>0 and p<m end addTab("Home","https://img.icons8.com/ios-filled/256/ffffff/home.png",function(pg) local sc=x("sf",pg,{bs=0,bc=C.w,bt=1,sz=u(1,0,1,0),ps=u(0,0,0,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,ScrollingDirection=Enum.ScrollingDirection.Y,ScrollBarImageTransparency=0.4}) sc.Active=true sc.ScrollBarThickness=6 local pad=Instance.new("UIPadding") pad.PaddingLeft=D(0,12) pad.PaddingRight=D(0,12) pad.PaddingTop=D(0,12) pad.PaddingBottom=D(0,12) pad.Parent=sc local lay=Instance.new("UIListLayout") lay.Parent=sc lay.FillDirection=Enum.FillDirection.Vertical lay.HorizontalAlignment=Enum.HorizontalAlignment.Left lay.SortOrder=Enum.SortOrder.LayoutOrder lay.Padding=D(0,8) local hdr=x("fr",sc,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,36),ps=u(0,0,0,0)}) x("tl",hdr,{txw=true,tfx=E.lx,tfy=E.ly,txs=18,ft=F(R..A.i,E.b,E.n),tc=C.w,bt=1,sz=u(1,0,0,18),ps=u(0,0,0,0),tx='Servers'}) local btnSort=x("tb",hdr,{txw=false,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(0,120,1,0),bt=1,bd=C.k,tx='Sort: Most'}) x("uc",btnSort,{cr=D(0.18,0)}) local btnFilter=x("tb",hdr,{txw=false,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(0,120,1,0),bt=1,bd=C.k,tx='Filter: NotFull'}) x("uc",btnFilter,{cr=D(0.18,0)}) local txtSearch=x("tb",hdr,{txw=true,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(1,-260,1,0),bt=1,bd=C.k,tx=''}) x("uc",txtSearch,{cr=D(0.18,0)}) local listContainer=Instance.new("Frame",sc) listContainer.Size=UDim2.new(1,0,0,0) listContainer.BackgroundTransparency=1 local listLayout=Instance.new("UIListLayout",listContainer) listLayout.SortOrder=Enum.SortOrder.LayoutOrder listLayout.Padding=D(0,8) local function makeItem(s,idx) local cap=x("fr",listContainer,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,64),ps=u(0,0,0,0)}) x("uc",cap,{cr=D(0.12,0)}) local title=x("tl",cap,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.s,E.n),tc=C.t1,bt=1,sz=u(1,-160,1,0),ps=u(0,12,0,8),tx='Players: '..tostring(s.playing or 0)..'/'..tostring(s.maxPlayers or 0)}) local info=x("tl",cap,{txw=false,tfx=E.lx,tfy=E.ly,txs=12,ft=F(R..A.i,E.r,E.n),tc=C.w,bt=1,sz=u(0,140,1,0),ps=u(0,12,0,8),tx='Job: '..tostring(s.id or s.playSessionId or '')}) local ping='N/A' local success,stat=pcall(function() local stats=game:GetService('Stats') if stats and stats.GetPerformanceStatsAsync then return stats:GetPerformanceStatsAsync() end end) if success and stat and stat.Ping then ping=tostring(math.floor(stat.Ping))..'ms' end local pingLbl=x("tl",cap,{txw=false,tfx=E.lx,tfy=E.ly,txs=12,ft=F(R..A.i,E.r,E.n),tc=C.w,bt=1,sz=u(0,100,1,0),ps=u(0,12,0,8),tx='Ping: '..ping}) local btn=x("tb",cap,{txw=false,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(0,100,1,0),bt=1,bd=C.k,tx='Join'}) x("uc",btn,{cr=D(0.12,0)}) btn.MouseButton1Click:Connect(function() pcall(function() TS:TeleportToPlaceInstance(game.PlaceId,tostring(s.id or s.playSessionId or s.id),Players.LocalPlayer) end) end) end local serversData={} local function refresh() serversData=fetchServers() local filtered={} for i,s in ipairs(serversData) do if (txtSearch[M.tx]=='' or tostring(s.id or s.playSessionId or s.playing or ''):lower():find((txtSearch[M.tx] or ""):lower())) then if filterMode=='notfull' then if isNotFull(s) then table.insert(filtered,s) end elseif filterMode=='intermediate' then if isIntermediate(s) then table.insert(filtered,s) end else table.insert(filtered,s) end end if #filtered>=maxShown then break end end if sortDesc then table.sort(filtered,function(a,b) return (a.playing or 0)>(b.playing or 0) end) else table.sort(filtered,function(a,b) return (a.playing or 0)<(b.playing or 0) end) end for _,v in ipairs(listContainer:GetChildren()) do if v:IsA('Frame') then v:Destroy() end end listContainer.Size=UDim2.new(1,0,0,#filtered*72) for i,s in ipairs(filtered) do makeItem(s,i) end end btnSort.MouseButton1Click:Connect(function() sortDesc=not sortDesc btnSort[M.tx]='Sort: '..(sortDesc and 'Most' or 'Least') refresh() end) btnFilter.MouseButton1Click:Connect(function() if filterMode=='notfull' then filterMode='intermediate' elseif filterMode=='intermediate' then filterMode='all' else filterMode='notfull' end btnFilter[M.tx]='Filter: '..(filterMode=='notfull' and 'NotFull' or filterMode=='intermediate' and 'Intermediate' or 'All') refresh() end) txtSearch:GetPropertyChangedSignal('Text'):Connect(function() txtSearch[M.tx]=txtSearch.Text refresh() end) refresh() end) end) end)

