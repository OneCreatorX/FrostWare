task.spawn(function()pcall(function()while not game:IsLoaded() do task.wait() end;local cb=setclipboard or toclipboard or (syn and syn.write_clipboard) local P=G.Players local LP=P.LocalPlayer local RS=G.RunService local TS=game:GetService("TeleportService") local HttpService=game:GetService("HttpService") if not T.sf then T.sf="ScrollingFrame" end;addTab("Home","https://img.icons8.com/ios-filled/256/ffffff/home.png",function(pg)local sc=x("sf",pg,{bs=0,bc=C.w,bt=1,sz=u(1,0,1,0),ps=u(0,0,0,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,ScrollingDirection=Enum.ScrollingDirection.Y,ScrollBarImageTransparency=0.4})sc.Active=true sc.ScrollBarThickness=6 local pad=Instance.new("UIPadding")pad.PaddingLeft=D(0,16) pad.PaddingRight=D(0,16) pad.PaddingTop=D(0,16) pad.PaddingBottom=D(0,16) pad.Parent=sc local lay=Instance.new("UIListLayout")lay.Parent=sc lay.FillDirection=Enum.FillDirection.Vertical lay.HorizontalAlignment=Enum.HorizontalAlignment.Left lay.SortOrder=Enum.SortOrder.LayoutOrder lay.Padding=D(0,12) local t=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=28,ft=F(R..A.i,E.b,E.n),tc=C.w,bt=1,sz=u(1,0,0,36),ps=u(0,0,0,0),tx="Home"}) local function mk(parent,txt)local cap=x("fr",parent,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,44),ps=u(0,0,0,0)})x("uc",cap,{cr=D(0.18,0)})x("ug",cap,{rt=90,Color=s(r(166,190,255),r(93,117,160))})x("us",cap,{ar=E.a,th=1,Color=C.st})local lb=x("tl",cap,{txw=true,tfx=E.lx,tfy=E.ly,txs=18,ft=F(R..A.i,E.s,E.n),tc=C.t1,bt=1,sz=u(1,-24,1,-16),ps=u(0,12,0,8),tx=txt})local b=x("tb",cap,{txw=true,bs=0,txs=14,tc=C.k,txsc=true,bc=C.w,ft=F(A.j,E.b,E.n),sz=u(1,0,1,0),bt=1,bd=C.k,tx=""})x("uc",b,{cr=D(0,18)})return cap,b,lb end;local function ptxt(v)local s=string.format("Vector3.new(%.3f, %.3f, %.3f)",v.X,v.Y,v.Z) return s end;local currentChar=nil local currentHRP=nil local function waitForChar()while not LP.Character do task.wait(0.1) end return LP.Character end;local function waitForHRP(char)while not char:FindFirstChild("HumanoidRootPart") do task.wait(0.1) if not char.Parent then return nil end end return char:FindFirstChild("HumanoidRootPart") end;local function updateCharRefs()local char=LP.Character if char and char.Parent then local hrp=char:FindFirstChild("HumanoidRootPart") if hrp then currentChar=char currentHRP=hrp return true end end currentChar=nil currentHRP=nil return false end;local function gpos()if currentHRP and currentHRP.Parent and currentChar and currentChar.Parent then local ok,pos=pcall(function()return currentHRP.Position end) if ok and pos then return pos end end if not updateCharRefs() then local char=waitForChar() if char then local hrp=waitForHRP(char) if hrp then currentChar=char currentHRP=hrp return hrp.Position end end end return Vector3.new(0,0,0) end;local function gpc()local ok,c=pcall(function()return #P:GetPlayers() end) if not ok then c=0 end local ok2,mx=pcall(function()return P.MaxPlayers end) if not ok2 then mx=0 end return c,mx end;local cp,cbt,clb=mk(sc,"Players 0/0")local pp,pbt,plb=mk(sc,"Position: 0,0,0")local jp,jbt,jlb=mk(sc,"Server Job: "..tostring(game.JobId))local info=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.r,E.n),tc=C.w,bt=1,sz=u(1,0,0,140),ps=u(0,0,0,0),tx="Notes:\n- Here you can put announcements, changes and server status.\n- Use line breaks freely.\n- Share the Job so others can join."}) local serverTitle=x("tl",sc,{txw=true,tfx=E.lx,tfy=E.ly,txs=24,ft=F(R..A.i,E.b,E.n),tc=C.w,bt=1,sz=u(1,0,0,32),ps=u(0,0,0,8),tx="Available Servers"}) local filterFrame=x("fr",sc,{bs=0,bc=C.w,bt=0,sz=u(1,0,0,50),ps=u(0,0,0,0)})x("uc",filterFrame,{cr=D(0.18,0)})x("ug",filterFrame,{rt=90,Color=s(r(100,120,200),r(60,80,140))})local filterLayout=Instance.new("UIListLayout")filterLayout.Parent=filterFrame filterLayout.FillDirection=Enum.FillDirection.Horizontal filterLayout.HorizontalAlignment=Enum.HorizontalAlignment.Center filterLayout.VerticalAlignment=Enum.VerticalAlignment.Center filterLayout.SortOrder=Enum.SortOrder.LayoutOrder filterLayout.Padding=D(0,8) local filterPad=Instance.new("UIPadding")filterPad.PaddingLeft=D(0,12) filterPad.PaddingRight=D(0,12) filterPad.Parent=filterFrame local currentFilter="balanced" local filterBtns={} local function createFilterBtn(text,filterType)local btn=x("tb",filterFrame,{txw=true,bs=0,txs=14,tc=filterType==currentFilter and C.w or C.t1,txsc=true,bc=filterType==currentFilter and r(80,200,120) or C.w,ft=F(A.j,E.b,E.n),sz=u(0,100,1,-16),bt=1,bd=filterType==currentFilter and r(80,200,120) or C.st,tx=text})x("uc",btn,{cr=D(0,12)})filterBtns[filterType]=btn return btn end;local lessBtn=createFilterBtn("Less Players","less")local moreBtn=createFilterBtn("More Players","more")local balancedBtn=createFilterBtn("Balanced","balanced")local pingBtn=createFilterBtn("Best Ping","ping") local serverScrollFrame=x("sf",sc,{bs=0,bc=C.w,bt=1,sz=u(1,0,0,300),ps=u(0,0,0,0),AutomaticCanvasSize=Enum.AutomaticSize.Y,ScrollingDirection=Enum.ScrollingDirection.Y,ScrollBarImageTransparency=0.6})serverScrollFrame.Active=true serverScrollFrame.ScrollBarThickness=4 x("uc",serverScrollFrame,{cr=D(0.18,0)})local serverPad=Instance.new("UIPadding")serverPad.PaddingLeft=D(0,8) serverPad.PaddingRight=D(0,8) serverPad.PaddingTop=D(0,8) serverPad.PaddingBottom=D(0,8) serverPad.Parent=serverScrollFrame local serverLayout=Instance.new("UIListLayout")serverLayout.Parent=serverScrollFrame serverLayout.FillDirection=Enum.FillDirection.Vertical serverLayout.HorizontalAlignment=Enum.HorizontalAlignment.Left serverLayout.SortOrder=Enum.SortOrder.LayoutOrder serverLayout.Padding=D(0,6) local servers={} local function generateServers()servers={} for i=1,15 do local players=math.random(0,30) local maxPlayers=30 local ping=math.random(20,200) local region={"US-East","US-West","EU","Asia","Brazil"}[math.random(1,5)] local isCurrent=i==1 servers[i]={id="Server_"..i,players=players,maxPlayers=maxPlayers,ping=ping,region=region,isCurrent=isCurrent,jobId=isCurrent and game.JobId or HttpService:GenerateGUID(false)} end end;local function sortServers()if currentFilter=="less" then table.sort(servers,function(a,b)if a.players==a.maxPlayers then return false end if b.players==b.maxPlayers then return true end return a.players<b.players end) elseif currentFilter=="more" then table.sort(servers,function(a,b)if a.players==a.maxPlayers then return false end if b.players==b.maxPlayers then return true end return a.players>b.players end) elseif currentFilter=="balanced" then table.sort(servers,function(a,b)local aBalance=math.abs(a.players-(a.maxPlayers/2)) local bBalance=math.abs(b.players-(b.maxPlayers/2)) if a.players==0 or a.players==a.maxPlayers then aBalance=aBalance+100 end if b.players==0 or b.players==b.maxPlayers then bBalance=bBalance+100 end return aBalance<bBalance end) elseif currentFilter=="ping" then table.sort(servers,function(a,b)return a.ping<b.ping end) end end;local function createServerCard(serverData)local card=x("fr",serverScrollFrame,{bs=0,bc=serverData.isCurrent and r(100,200,100) or C.w,bt=1,bd=serverData.isCurrent and r(80,180,80) or C.st,sz=u(1,0,0,80),ps=u(0,0,0,0)})x("uc",card,{cr=D(0.12,0)}) local cardPad=Instance.new("UIPadding")cardPad.PaddingLeft=D(0,12) cardPad.PaddingRight=D(0,12) cardPad.PaddingTop=D(0,8) cardPad.PaddingBottom=D(0,8) cardPad.Parent=card local leftInfo=x("fr",card,{bs=0,bc=C.w,bt=0,sz=u(0.7,0,1,0),ps=u(0,0,0,0)}) local leftLayout=Instance.new("UIListLayout")leftLayout.Parent=leftInfo leftLayout.FillDirection=Enum.FillDirection.Vertical leftLayout.HorizontalAlignment=Enum.HorizontalAlignment.Left leftLayout.VerticalAlignment=Enum.VerticalAlignment.Top leftLayout.SortOrder=Enum.SortOrder.LayoutOrder leftLayout.Padding=D(0,2) local serverName=x("tl",leftInfo,{txw=true,tfx=E.lx,tfy=E.ly,txs=16,ft=F(R..A.i,E.b,E.n),tc=serverData.isCurrent and C.w or C.t1,bt=1,sz=u(1,0,0,20),ps=u(0,0,0,0),tx=serverData.id..(serverData.isCurrent and " (Current)" or "")}) local playerInfo=x("tl",leftInfo,{txw=true,tfx=E.lx,tfy=E.ly,txs=14,ft=F(R..A.i,E.r,E.n),tc=serverData.isCurrent and C.w or C.t2,bt=1,sz=u(1,0,0,16),ps=u(0,0,0,0),tx="Players: "..serverData.players.."/"..serverData.maxPlayers}) local pingInfo=x("tl",leftInfo,{txw=true,tfx=E.lx,tfy=E.ly,txs=12,ft=F(R..A.i,E.r,E.n),tc=serverData.isCurrent and C.w or C.t2,bt=1,sz=u(1,0,0,14),ps=u(0,0,0,0),tx="Ping: "..serverData.ping.."ms | "..serverData.region}) local regionInfo=x("tl",leftInfo,{txw=true,tfx=E.lx,tfy=E.ly,txs=11,ft=F(R..A.i,E.r,E.n),tc=serverData.isCurrent and C.w or C.t2,bt=1,sz=u(1,0,0,12),ps=u(0,0,0,0),tx="Job: "..string.sub(serverData.jobId,1,8).."..."}) local rightInfo=x("fr",card,{bs=0,bc=C.w,bt=0,sz=u(0.3,0,1,0),ps=u(0.7,0,0,0)}) local joinBtn=x("tb",rightInfo,{txw=true,bs=0,txs=14,tc=C.w,txsc=true,bc=serverData.players>=serverData.maxPlayers and r(150,150,150) or (serverData.isCurrent and r(100,150,200) or r(80,200,120)),ft=F(A.j,E.b,E.n),sz=u(1,-16,0,32),ps=u(0,8,0.5,-16),bt=1,bd=C.w,tx=serverData.isCurrent and "Current" or (serverData.players>=serverData.maxPlayers and "Full" or "Join")})x("uc",joinBtn,{cr=D(0,8)}) if not serverData.isCurrent and serverData.players<serverData.maxPlayers then y(joinBtn,function()pcall(function()TS:TeleportToPlaceInstance(game.PlaceId,serverData.jobId,LP)end)end) end return card end;local function updateServerList()for _,child in pairs(serverScrollFrame:GetChildren()) do if child:IsA("Frame") and child~=serverPad and child~=serverLayout then child:Destroy() end end sortServers() for i,serverData in ipairs(servers) do createServerCard(serverData) end end;local function updateFilter(newFilter)currentFilter=newFilter for filterType,btn in pairs(filterBtns) do if filterType==currentFilter then btn.BackgroundColor3=r(80,200,120) btn.BorderColor3=r(80,200,120) btn.TextColor3=C.w else btn.BackgroundColor3=C.w btn.BorderColor3=C.st btn.TextColor3=C.t1 end end updateServerList() end;y(lessBtn,function()updateFilter("less")end) y(moreBtn,function()updateFilter("more")end) y(balancedBtn,function()updateFilter("balanced")end) y(pingBtn,function()updateFilter("ping")end) generateServers() updateServerList() task.spawn(function()while task.wait(30) do generateServers() updateServerList() end end) local function updPlayers()local c,mx=gpc() clb[M.tx]="Players "..tostring(c).."/"..tostring(mx) end;local function updPos()local v=gpos() plb[M.tx]="Position: "..string.format("%.2f, %.2f, %.2f",v.X,v.Y,v.Z) end;updateCharRefs() updPlayers() updPos() P.PlayerAdded:Connect(updPlayers) P.PlayerRemoving:Connect(updPlayers) LP.CharacterAdded:Connect(function(char)task.wait(0.1)updateCharRefs()end) LP.CharacterRemoving:Connect(function()currentChar=nil currentHRP=nil end) task.spawn(function()while task.wait(0.5) do updPos() end end) y(cbt,function()local c,mx=gpc()local s="Players "..tostring(c).."/"..tostring(mx) if cb then pcall(function()cb(s)end) end end) y(pbt,function()local v=gpos()local s=ptxt(v) if cb then pcall(function()cb(s)end) end end) y(jbt,function()local s='local TS=game:GetService("TeleportService") local P=game:GetService("Players") TS:TeleportToPlaceInstance('..tostring(game.PlaceId)..',"'..tostring(game.JobId)..'",P.LocalPlayer)' if cb then pcall(function()cb(s)end) end end) end) end) end)
